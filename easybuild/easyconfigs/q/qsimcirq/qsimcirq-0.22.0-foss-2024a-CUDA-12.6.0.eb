easyblock = 'PythonBundle'

name = 'qsimcirq'
version = '0.22.0'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://github.com/quantumlib/qsim'
description = """
    qsim is a state-vector simulator for quantum circuits. It is highly tuned to take advantage of vector arithmetic
    instruction sets and multithreading on computers that provide them, as well as GPUs when available.

    qsim also provides a Cirq interface (qsimcirq) and can be used to simulate quantum circuits written in Cirq.
"""

toolchain = {'name': 'foss', 'version': '2024a'}

builddependencies = [
    ('CMake', '3.31.3'),
    ('poetry', '1.8.3'),
]

dependencies = [
    ('cuQuantum', '24.08.0.5-CUDA-%(cudaver)s', '', SYSTEM),
    ('CUDA', '12.6.0', '', SYSTEM),
    ('UCX-CUDA', '1.16.0', '-CUDA-%(cudaver)s'),
    ('Cython', '3.0.10'),
    ('Python', '3.12.3'),
    ('SciPy-bundle', '2024.05'),
    ('absl-py', '2.1.0'),
    ('matplotlib', '3.9.2'),
    ('networkx', '3.4.2'),
    ('pybind11', '2.13.6'),
    ('protobuf-python', '5.28.0'),
    ('sympy', '1.13.3'),
    ('tqdm', '4.66.5'),
]

local_build_cmd = 'python -m pip install --prefix=%(installdir)s --no-deps --ignore-installed --no-build-isolation '
local_cirq_modules = './cirq-core ./cirq-google ./cirq-ionq ./cirq-aqt ./cirq-pasqal ./cirq-web .'

exts_list = [
    ('duet', '0.2.9', {
        'checksums': ['d6fa39582e6a3dce1096c47e5fbcbda648a633eed94a38943e68662afa2587f3'],
    }),
    ('typedunits', '0.0.1.dev20250509200845', {
        'modulename': 'tunits',
        'sources': [{
            'git_config': {
                'url': 'https://github.com/quantumlib',
                'repo_name': 'TypedUnits',
                'commit': '95e698b',
            },
            'filename': SOURCE_TAR_XZ}],
        'checksums': ['0a4f2233afc05548ab05618c8cc78b5acaf274bc5a47e194bf79af2075ae2ac2'],
    }),
    ('proto_plus', '1.26.1', {
        'modulename': 'proto',
        'checksums': ['21a515a4c4c0088a773899e23c7bbade3d18f9c66c73edd4c7ee3816bc96a012'],
    }),
    ('cachetools', '5.5.2', {
        'checksums': ['1a661caa9175d26759571b2e19580f9d6393969e5dfca11fdb1f947a23e640d4'],
    }),
    ('pyasn1', '0.6.1', {
        'checksums': ['6f580d2bdd84365380830acf45550f2511469f673cb4a5ae3857a3170128b034'],
    }),
    ('pyasn1-modules', '0.4.2', {
        'source_tmpl': 'pyasn1_modules-%(version)s.tar.gz',
        'checksums': ['677091de870a80aae844b1ca6134f54652fa2c8c5a52aa396440ac3106e941e6'],
    }),
    ('rsa', '4.9.1', {
        'checksums': ['e7bdbfdb5497da4c07dfd35530e1a902659db6ff241e39d9953cad06ebd0ae75'],
    }),
    ('google-auth', '2.40.3', {
        'modulename': 'google.auth',
        'source_tmpl': 'google_auth-%(version)s.tar.gz',
        'checksums': ['500c3a29adedeb36ea9cf24b8d10858e152f2412e3ca37829b3fa18e33d63b77'],
    }),
    ('googleapis-common-protos', '1.70.0', {
        'modulename': 'google.api',
        'source_tmpl': 'googleapis_common_protos-%(version)s.tar.gz',
        'checksums': ['0e1b44e0ea153e6594f9f394fef15193a68aaaea2d843f83e2742717ca753257'],
    }),
    ('google-api-core', '2.25.1', {
        'modulename': 'google.api_core',
        'source_tmpl': 'google_api_core-%(version)s.tar.gz',
        'checksums': ['d2aaa0b13c78c61cb3f4282c464c046e45fbd75755683c9c525e6e8f7ed0a5e8'],
    }),
    ('cirq', '1.6.0', {
        'prebuildopts': "export CUQUANTUM_ROOT=${EBROOTCUQUANTUM} && ",
        'buildcmd': '%s %s' % (local_build_cmd, local_cirq_modules),
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/quantumlib/Cirq/archive/refs/tags/'],
        'checksums': ['d65e80185faeb452d811cfb6d78ff23fb4d5151900db22ae38b635bf39ac21ef'],
    }),
    ('setuptools', '75.2.0', {
        'checksums': ['753bb6ebf1f465a1912e19ed1d41f403a79173a9acf66a42e7e6aec45c3c16ec'],
    }),
    (name, version, {
        'preinstallopts': "export CUQUANTUM_ROOT=${EBROOTCUQUANTUM} && ",
        'checksums': ['90326abcfdfacd840cff61ca6c559ffc06ccf3bf6e631a5e44118894ff3109cb'],
    }),
]

sanity_check_commands = ['python -c "import qsimcirq; print(qsimcirq.qsim_gpu)" | grep cuda']

moduleclass = 'quantum'
