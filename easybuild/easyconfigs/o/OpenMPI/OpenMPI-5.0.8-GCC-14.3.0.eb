name = 'OpenMPI'
version = '5.0.8'

homepage = 'https://www.open-mpi.org/'
description = """The Open MPI Project is an open source MPI-3 implementation."""

toolchain = {'name': 'GCC', 'version': '14.3.0'}

source_urls = ['https://www.open-mpi.org/software/ompi/v%(version_major_minor)s/downloads']
sources = [SOURCELOWER_TAR_BZ2]
patches = [
    ('OpenMPI-5.0.6_build-with-internal-cuda-header.patch', 1),
]
checksums = [
    {'openmpi-5.0.8.tar.bz2': '53131e1a57e7270f645707f8b0b65ba56048f5b5ac3f68faabed3eb0d710e449'},
    {'OpenMPI-5.0.6_build-with-internal-cuda-header.patch':
     '4821f0740ae4b97f3ff5259f7bac67a11d8cdeede3b1425825c241cf6a2864bb'},
]

builddependencies = [
    ('pkgconf', '2.4.3'),
    ('Autotools', '20250527'),
]

dependencies = [
    ('zlib', '1.3.1'),
    ('hwloc', '2.12.1'),
    ('libevent', '2.1.12'),
    ('UCX', '1.19.0'),
    ('libfabric', '2.1.0'),
    ('PMIx', '6.0.0'),
    ('PRRTE', '4.0.0'),
    ('UCC', '1.4.4'),
]

# CUDA related patches and custom configure option can be removed if CUDA support isn't wanted.
preconfigopts = 'gcc -Iopal/mca/cuda/include -shared opal/mca/cuda/lib/cuda.c -o opal/mca/cuda/lib/libcuda.so && '
# Disable building Level Zero components of romio if system dependencies are picked up. Sources are not based on
# recent Level Zero interface anyway, so there's a high chance that builds fail.
# See https://github.com/open-mpi/ompi/issues/10235
preconfigopts += 'sed -i "s/have_ze=yes/have_ze=no/" %(start_dir)s/3rd-party/romio341/mpl/configure && '
configopts = '--with-cuda=%(start_dir)s/opal/mca/cuda --with-show-load-errors=no'
# Do not pick up the system library automatically
configopts += ' --without-xpmem'

moduleclass = 'mpi'
